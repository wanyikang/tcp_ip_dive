18.1
I don't know


18.2
第一种情况sock程序使用一个ASCII字符的newline进行传输，第二种情况telnet使用2个ASCII字符的newline进行传输


18.3
半关闭：tcp连接是双向通信的，半关闭指通信一端发出FIN，对端回ACK后，对端不立即发送FIN，而是继续发送数据，
主动关闭端一直等待对端的FIN报文。
半打开：指通信的一端已经丢失连接了(例如电脑掉电)，对端不知道的情况。


18.4
tcp连接只有处于established状态并且主动关闭连接时才有会经历2MSL状态


18.5
从打印语句connection closed by peer可以看出此时是服务器执行了主动关闭连接的操作,
所以2MSL状态是服务器端在经历，所以连续运行两次客户端程序能以同一个端口建立连接，而服务器端也是同一个端口的原因在于
大多数BSD版的OS实现TCP协议时支持2MSL的状态时也可以建立连接，只要新的sequence
number 大于前一个替身的最后一个sequence number


18.6
BSD实现处于FIN_WAIT_2状态的一端在等待10分57秒后将状态直接变更为closed，所以12分钟后主动关闭端已经closed的了，
现在发送FIN相当于在一个已经关闭的连接上发送FIN，应该用reset报文回应


18.7
拨打电话的一端是主动打开，电话响铃的一端是被动打开，不清楚是否允许同时打开和关闭，但TCP是支持同时打开和关闭的。


18.8
服务器断开连接的情况下，我们将只看到ARP请求报文，而不是TCP的SYN报文。
